{
  "info": {
    "name": "DaviStore API - E-Commerce Completo",
    "description": "Colecci√≥n completa de endpoints para DaviStore API - Sistema E-Commerce con autenticaci√≥n, usuarios, categor√≠as, productos, carrito y √≥rdenes",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "davistore"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "category_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "product_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "cart_item_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "order_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["health"]
        },
        "description": "Verifica que el servidor est√© funcionando correctamente"
      }
    },
    {
      "name": "API Info",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}",
          "host": ["{{base_url}}"]
        },
        "description": "Obtiene informaci√≥n de la API y lista de endpoints disponibles"
      }
    },
    {
      "name": "üîê Autenticaci√≥n",
      "item": [
        {
          "name": "1. Registrar Usuario",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "    console.log('‚úÖ Usuario registrado y tokens guardados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente@ejemplo.com\",\n  \"password\": \"Password123\",\n  \"first_name\": \"Juan\",\n  \"last_name\": \"P√©rez\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "2. Iniciar Sesi√≥n",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "    console.log('‚úÖ Login exitoso y tokens guardados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente@ejemplo.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "3. Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "    console.log('‚úÖ Login admin exitoso y tokens guardados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@davistore.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "4. Obtener Usuario Actual",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "5. Refrescar Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    console.log('‚úÖ Tokens refrescados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "6. Cerrar Sesi√≥n",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Usuarios",
      "item": [
        {
          "name": "1. Listar Usuarios (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "isActive",
                  "value": "true",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "2. Obtener Usuario por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "3. Actualizar Usuario",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Juan Actualizado\",\n  \"last_name\": \"P√©rez Garc√≠a\",\n  \"phone\": \"+0987654321\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÅ Categor√≠as",
      "item": [
        {
          "name": "1. Listar Categor√≠as (P√∫blico)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Obtener todas las categor√≠as activas (no requiere autenticaci√≥n)"
          }
        },
        {
          "name": "2. √Årbol de Categor√≠as (P√∫blico)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories/tree",
              "host": ["{{base_url}}"],
              "path": ["categories", "tree"]
            },
            "description": "Obtener categor√≠as organizadas en √°rbol jer√°rquico"
          }
        },
        {
          "name": "3. Obtener Categor√≠a por ID",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "4. Obtener Categor√≠a por Slug",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories/slug/electronica",
              "host": ["{{base_url}}"],
              "path": ["categories", "slug", "electronica"]
            },
            "description": "Buscar categor√≠a por su slug (√∫til para URLs amigables)"
          }
        },
        {
          "name": "5. Crear Categor√≠a (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('category_id', jsonData.data.category.id);",
                  "    console.log('‚úÖ Categor√≠a creada, ID guardado');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electr√≥nica\",\n  \"slug\": \"electronica\",\n  \"description\": \"Productos electr√≥nicos y tecnolog√≠a\",\n  \"image_url\": \"https://example.com/images/electronica.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            }
          }
        },
        {
          "name": "6. Crear Subcategor√≠a (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Laptops\",\n  \"slug\": \"laptops\",\n  \"description\": \"Computadoras port√°tiles\",\n  \"parent_id\": \"{{category_id}}\",\n  \"image_url\": \"https://example.com/images/laptops.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Crear una subcategor√≠a con parent_id"
          }
        },
        {
          "name": "7. Actualizar Categor√≠a (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electr√≥nica y Tecnolog√≠a\",\n  \"description\": \"Productos electr√≥nicos, computadoras y accesorios\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "8. Eliminar Categor√≠a (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["categories", "{{category_id}}"]
            },
            "description": "Solo se puede eliminar si no tiene productos ni subcategor√≠as"
          }
        }
      ]
    },
    {
      "name": "üõçÔ∏è Productos",
      "item": [
        {
          "name": "1. Listar Productos (P√∫blico)",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "categoryId",
                  "value": "{{category_id}}",
                  "disabled": true
                },
                {
                  "key": "minPrice",
                  "value": "100",
                  "disabled": true
                },
                {
                  "key": "maxPrice",
                  "value": "5000",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "laptop",
                  "disabled": true
                },
                {
                  "key": "isActive",
                  "value": "true",
                  "disabled": true
                },
                {
                  "key": "inStock",
                  "value": "true",
                  "disabled": true
                }
              ]
            },
            "description": "Listar productos con filtros opcionales"
          }
        },
        {
          "name": "2. Buscar Productos",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products?search=laptop&inStock=true&page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "search",
                  "value": "laptop"
                },
                {
                  "key": "inStock",
                  "value": "true"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Buscar productos por nombre, descripci√≥n o SKU"
          }
        },
        {
          "name": "3. Filtrar por Categor√≠a y Precio",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products?categoryId={{category_id}}&minPrice=500&maxPrice=2000",
              "host": ["{{base_url}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "categoryId",
                  "value": "{{category_id}}"
                },
                {
                  "key": "minPrice",
                  "value": "500"
                },
                {
                  "key": "maxPrice",
                  "value": "2000"
                }
              ]
            }
          }
        },
        {
          "name": "4. Obtener Producto por ID",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          }
        },
        {
          "name": "5. Obtener Producto por SKU",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/sku/LAP-001",
              "host": ["{{base_url}}"],
              "path": ["products", "sku", "LAP-001"]
            }
          }
        },
        {
          "name": "6. Crear Producto (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('product_id', jsonData.data.product.id);",
                  "    console.log('‚úÖ Producto creado, ID guardado');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sku\": \"LAP-001\",\n  \"name\": \"Laptop Dell XPS 15\",\n  \"description\": \"Laptop de alto rendimiento con procesador Intel Core i7, 16GB RAM, 512GB SSD\",\n  \"price\": 1299.99,\n  \"stock_quantity\": 15,\n  \"category_id\": \"{{category_id}}\",\n  \"image_url\": \"https://example.com/images/dell-xps-15.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "7. Actualizar Producto (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Laptop Dell XPS 15 - Edici√≥n 2024\",\n  \"price\": 1199.99,\n  \"description\": \"Laptop de alto rendimiento actualizada con mejoras de bater√≠a\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            }
          }
        },
        {
          "name": "8. Actualizar Stock (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 25\n}"
            },
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}/stock",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}", "stock"]
            },
            "description": "Actualizar la cantidad en stock de un producto"
          }
        },
        {
          "name": "9. Eliminar Producto (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["products", "{{product_id}}"]
            },
            "description": "Solo se puede eliminar si no est√° en carritos activos ni √≥rdenes"
          }
        }
      ]
    },
    {
      "name": "üõí Carrito",
      "item": [
        {
          "name": "1. Ver Mi Carrito",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cart",
              "host": ["{{base_url}}"],
              "path": ["cart"]
            },
            "description": "Obtener el carrito activo del usuario autenticado"
          }
        },
        {
          "name": "2. Resumen del Carrito",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cart/summary",
              "host": ["{{base_url}}"],
              "path": ["cart", "summary"]
            },
            "description": "Obtener resumen r√°pido: total items, subtotal, cantidad de productos"
          }
        },
        {
          "name": "3. Agregar Producto al Carrito",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data.cart.items.length > 0) {",
                  "        pm.collectionVariables.set('cart_item_id', jsonData.data.cart.items[0].id);",
                  "        console.log('‚úÖ Producto agregado al carrito');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/items",
              "host": ["{{base_url}}"],
              "path": ["cart", "items"]
            },
            "description": "Agregar un producto al carrito (valida stock disponible)"
          }
        },
        {
          "name": "4. Agregar Otro Producto",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/items",
              "host": ["{{base_url}}"],
              "path": ["cart", "items"]
            },
            "description": "Si el producto ya est√°, suma la cantidad"
          }
        },
        {
          "name": "5. Actualizar Cantidad de Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "items", "{{cart_item_id}}"]
            },
            "description": "Cambiar la cantidad de un item espec√≠fico"
          }
        },
        {
          "name": "6. Eliminar Item del Carrito",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cart/items/{{cart_item_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "items", "{{cart_item_id}}"]
            },
            "description": "Eliminar un producto espec√≠fico del carrito"
          }
        },
        {
          "name": "7. Vaciar Carrito",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cart",
              "host": ["{{base_url}}"],
              "path": ["cart"]
            },
            "description": "Eliminar todos los items del carrito"
          }
        }
      ]
    },
    {
      "name": "üì¶ √ìrdenes",
      "item": [
        {
          "name": "1. Crear Orden (Checkout)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('order_id', jsonData.data.order.id);",
                  "    console.log('‚úÖ Orden creada, ID guardado');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"shipping_address\": {\n    \"address\": \"Calle Principal 123, Depto 4B\",\n    \"city\": \"Ciudad de M√©xico\",\n    \"state\": \"CDMX\",\n    \"zip\": \"01234\",\n    \"country\": \"M√©xico\"\n  },\n  \"payment_method\": \"credit_card\",\n  \"notes\": \"Por favor entregar en horario de oficina (9am-6pm)\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders",
              "host": ["{{base_url}}"],
              "path": ["orders"]
            },
            "description": "Crear orden desde el carrito actual. Valida stock, calcula totales, reduce inventario"
          }
        },
        {
          "name": "2. Listar Mis √ìrdenes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "pending",
                  "disabled": true
                }
              ]
            },
            "description": "Usuario normal ve solo sus √≥rdenes, Admin ve todas"
          }
        },
        {
          "name": "3. Listar Todas las √ìrdenes (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "status",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "userId",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Admin puede filtrar por usuario y estado"
          }
        },
        {
          "name": "4. Filtrar √ìrdenes Pendientes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders?status=pending",
              "host": ["{{base_url}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            }
          }
        },
        {
          "name": "5. Obtener Orden por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}"]
            },
            "description": "Ver detalles completos de una orden (items, totales, pago)"
          }
        },
        {
          "name": "6. Actualizar Estado a Processing (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"processing\",\n  \"notes\": \"Orden en proceso de preparaci√≥n\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "status"]
            },
            "description": "Cambiar estado de la orden (solo Admin)"
          }
        },
        {
          "name": "7. Actualizar Estado a Completed (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\",\n  \"notes\": \"Orden entregada exitosamente\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "status"]
            },
            "description": "Marca la orden como completada y el pago como aprobado"
          }
        },
        {
          "name": "8. Cancelar Orden (Usuario)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/orders/{{order_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["orders", "{{order_id}}", "cancel"]
            },
            "description": "Usuario cancela su orden (solo si est√° pending). Restaura stock autom√°ticamente"
          }
        }
      ]
    },
    {
      "name": "‚ùå Ejemplos de Errores",
      "item": [
        {
          "name": "Error 400 - Validaci√≥n Email",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"email-invalido\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Error 401 - Token Inv√°lido",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "token_invalido_123",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Error 403 - Sin Permisos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test\",\n  \"slug\": \"test\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Usuario no admin intentando crear categor√≠a"
          }
        },
        {
          "name": "Error 404 - Producto No Encontrado",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/products/00000000-0000-0000-0000-000000000000",
              "host": ["{{base_url}}"],
              "path": ["products", "00000000-0000-0000-0000-000000000000"]
            }
          }
        },
        {
          "name": "Error 409 - SKU Duplicado",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sku\": \"LAP-001\",\n  \"name\": \"Producto duplicado\",\n  \"description\": \"Intentando usar SKU existente\",\n  \"price\": 100,\n  \"stock_quantity\": 10,\n  \"category_id\": \"{{category_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/products",
              "host": ["{{base_url}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Error 422 - Stock Insuficiente",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_id\": \"{{product_id}}\",\n  \"quantity\": 9999\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/items",
              "host": ["{{base_url}}"],
              "path": ["cart", "items"]
            },
            "description": "Intentar agregar m√°s cantidad que el stock disponible"
          }
        }
      ]
    }
  ]
}
