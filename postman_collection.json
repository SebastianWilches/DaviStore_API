{
  "info": {
    "name": "DaviStore API",
    "description": "Colección completa de endpoints para DaviStore API - Sistema de autenticación y gestión de usuarios",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "davistore"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["health"]
        },
        "description": "Verifica que el servidor esté funcionando correctamente"
      }
    },
    {
      "name": "Autenticación",
      "item": [
        {
          "name": "1. Registrar Usuario",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "    console.log('✅ Usuario registrado y tokens guardados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente@ejemplo.com\",\n  \"password\": \"Password123\",\n  \"first_name\": \"Juan\",\n  \"last_name\": \"Pérez\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Registra un nuevo usuario en el sistema. Automáticamente guarda los tokens y el ID del usuario."
          }
        },
        {
          "name": "2. Iniciar Sesión",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "    console.log('✅ Login exitoso y tokens guardados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"cliente@ejemplo.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Inicia sesión con email y contraseña. Automáticamente guarda los tokens."
          }
        },
        {
          "name": "3. Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('user_id', jsonData.data.user.id);",
                  "    console.log('✅ Login admin exitoso y tokens guardados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@davistore.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Inicia sesión como administrador (usuario por defecto de la BD)"
          }
        },
        {
          "name": "4. Obtener Usuario Actual",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Obtiene información del usuario autenticado actual"
          }
        },
        {
          "name": "5. Refrescar Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.data.tokens.refreshToken);",
                  "    console.log('✅ Tokens refrescados');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Genera un nuevo access token usando el refresh token"
          }
        },
        {
          "name": "6. Cerrar Sesión",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            },
            "description": "Cierra la sesión del usuario (principalmente para documentación)"
          }
        }
      ]
    },
    {
      "name": "Usuarios",
      "item": [
        {
          "name": "1. Listar Usuarios (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "isActive",
                  "value": "true",
                  "disabled": true
                },
                {
                  "key": "roleId",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Lista todos los usuarios con paginación. Solo administradores."
          }
        },
        {
          "name": "2. Obtener Usuario por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Obtiene información de un usuario específico. Propietario o admin."
          }
        },
        {
          "name": "3. Actualizar Usuario",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Juan Actualizado\",\n  \"last_name\": \"Pérez García\",\n  \"phone\": \"+0987654321\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Actualiza información de un usuario. Propietario o admin. Todos los campos son opcionales."
          }
        },
        {
          "name": "4. Actualizar Email",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"nuevo@ejemplo.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Actualiza el email de un usuario"
          }
        },
        {
          "name": "5. Cambiar Contraseña",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"NewPassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Cambia la contraseña de un usuario"
          }
        },
        {
          "name": "6. Activar Usuario (Admin)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/activate",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "activate"]
            },
            "description": "Activa un usuario desactivado. Solo administradores."
          }
        },
        {
          "name": "7. Desactivar Usuario (Admin)",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/deactivate",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "deactivate"]
            },
            "description": "Desactiva un usuario activo. Solo administradores."
          }
        },
        {
          "name": "8. Eliminar Usuario (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Elimina un usuario (soft delete). Solo administradores."
          }
        }
      ]
    },
    {
      "name": "Ejemplos de Errores",
      "item": [
        {
          "name": "Error 400 - Validación",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"email-invalido\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Ejemplo de error de validación (400)"
          }
        },
        {
          "name": "Error 401 - No Autorizado",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "token_invalido",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Ejemplo de error de autenticación (401)"
          }
        },
        {
          "name": "Error 403 - Prohibido",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Ejemplo de error de autorización (403) - usuario no admin intentando listar usuarios"
          }
        },
        {
          "name": "Error 404 - No Encontrado",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/00000000-0000-0000-0000-000000000000",
              "host": ["{{base_url}}"],
              "path": ["users", "00000000-0000-0000-0000-000000000000"]
            },
            "description": "Ejemplo de error de recurso no encontrado (404)"
          }
        },
        {
          "name": "Error 409 - Conflicto",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@davistore.com\",\n  \"password\": \"Password123\",\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Ejemplo de error de conflicto (409) - email duplicado"
          }
        }
      ]
    }
  ]
}

